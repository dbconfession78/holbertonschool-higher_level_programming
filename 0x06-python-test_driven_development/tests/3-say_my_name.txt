``The 3-say_my_name module``
=============================

Import module:
       >>> say_my_name = __import__("3-say_my_name").say_my_name

Check for documentation:
      >>> doc_mod = __import__("3-say_my_name").__doc__
      >>> print(len(doc_mod) > 0)
      True

      >>> doc_func = __import__("3-say_my_name").say_my_name.__doc__
      >>> print(len(doc_func) > 0)
      True

Use cases:
    >>> say_my_name("Stuart", "Kuredjian")
    My name is Stuart Kuredjian

    >>> say_my_name("1", "2")
    My name is 1 2

    >>> say_my_name("John")
    My name is John

    >>> say_my_name("Stuart Kuredjian")
    My name is Stuart Kuredjian

    >>> say_my_name("Stuart G.", "Kuredjian")
    My name is Stuart G. Kuredjian

    >>> say_my_name("John", )
    My name is John

Error handling:
      >>> say_my_name()
      Traceback (most recent call last):
      TypeError: say_my_name() missing 1 required positional argument: 'first_name'

      >>> say_my_name(2, "Smith")
      ...
      Traceback (most recent call last):
      TypeError: first_name must be a string

      >>> say_my_name("John", 2)
      ...
      Traceback (most recent call last):
      TypeError: last_name must be a string

      >>> say_my_name(2, 2)
      ...
      Traceback (most recent call last):
      TypeError: first_name must be a string

      >>> say_my_name("John", "M.", "Smith")
      ...
      Traceback (most recent call last):
      TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given

      >>> say_my_name(None, "Smith")
      ...
      Traceback (most recent call last):
      TypeError: first_name must be a string

      >>> say_my_name("John", None)
      ...
      Traceback (most recent call last):
      TypeError: last_name must be a string
